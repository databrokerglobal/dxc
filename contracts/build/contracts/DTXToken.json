{
  "contractName": "DTXToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "creationBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newController",
          "type": "address"
        }
      ],
      "name": "changeController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "balanceOfAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cloneTokenName",
          "type": "string"
        },
        {
          "name": "_cloneDecimalUnits",
          "type": "uint8"
        },
        {
          "name": "_cloneTokenSymbol",
          "type": "string"
        },
        {
          "name": "_snapshotBlock",
          "type": "uint256"
        },
        {
          "name": "_transfersEnabled",
          "type": "bool"
        }
      ],
      "name": "createCloneToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "parentToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "generateTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transfersEnabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "parentSnapShotBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "destroyTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenFactory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_transfersEnabled",
          "type": "bool"
        }
      ],
      "name": "enableTransfers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenFactory",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_controller",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimedTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_cloneToken",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_snapshotBlock",
          "type": "uint256"
        }
      ],
      "name": "NewCloneToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creationBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cloneTokenName\",\"type\":\"string\"},{\"name\":\"_cloneDecimalUnits\",\"type\":\"uint8\"},{\"name\":\"_cloneTokenSymbol\",\"type\":\"string\"},{\"name\":\"_snapshotBlock\",\"type\":\"uint256\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"createCloneToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfersEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentSnapShotBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"enableTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenFactory\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ClaimedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_cloneToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_snapshotBlock\",\"type\":\"uint256\"}],\"name\":\"NewCloneToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"This function makes it easy to read the `allowed[]` map\",\"params\":{\"_owner\":\"The address of the account that owns the token\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"return\":\"Amount of remaining tokens of _owner that _spender is allowed  to spend\"},\"approve(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be approved for transfer\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"return\":\"True if the approval was successful\"},\"approveAndCall(address,uint256,bytes)\":{\"params\":{\"_amount\":\"The amount of tokens to be approved for transfer\",\"_spender\":\"The address of the contract able to transfer the tokens\"},\"return\":\"True if the function call was successful\"},\"balanceOf(address)\":{\"params\":{\"_owner\":\"The address that's balance is being requested\"},\"return\":\"The balance of `_owner` at the current block\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the balance of `_owner` at a specific `_blockNumber`\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried\",\"_owner\":\"The address from which the balance will be retrieved\"},\"return\":\"The balance at `_blockNumber`\"},\"changeController(address)\":{\"params\":{\"_newController\":\"The new controller of the contract\"}},\"claimTokens(address)\":{\"params\":{\"_token\":\"The address of the token contract that you want to recover  set to 0 in case you want to extract ether.\"}},\"createCloneToken(string,uint8,string,uint256,bool)\":{\"params\":{\"_cloneDecimalUnits\":\"Number of decimals of the smallest unit\",\"_cloneTokenName\":\"Name of the clone token\",\"_cloneTokenSymbol\":\"Symbol of the clone token\",\"_snapshotBlock\":\"Block when the distribution of the parent token is  copied to set the initial distribution of the new clone token;  if the block is zero than the actual block, the current block is used\",\"_transfersEnabled\":\"True if transfers are allowed in the clone\"},\"return\":\"The address of the new MiniMeToken Contract\"},\"destroyTokens(address,uint256)\":{\"params\":{\"_amount\":\"The quantity of tokens to burn\",\"_owner\":\"The address that will lose the tokens\"},\"return\":\"True if the tokens are burned correctly\"},\"enableTransfers(bool)\":{\"params\":{\"_transfersEnabled\":\"True if transfers are allowed in the clone\"}},\"generateTokens(address,uint256)\":{\"params\":{\"_amount\":\"The quantity of tokens generated\",\"_owner\":\"The address that will be assigned the new tokens\"},\"return\":\"True if the tokens are generated correctly\"},\"totalSupply()\":{\"details\":\"This function makes it easy to get the total number of tokens\",\"return\":\"The total number of tokens\"},\"totalSupplyAt(uint256)\":{\"params\":{\"_blockNumber\":\"The block number when the totalSupply is queried\"},\"return\":\"The total amount of tokens at `_blockNumber`\"},\"transfer(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_to\":\"The address of the recipient\"},\"return\":\"Whether the transfer was successful or not\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_from\":\"The address holding the tokens being transferred\",\"_to\":\"The address of the recipient\"},\"return\":\"True if the transfer was successful\"}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"`msg.sender` approves `_spender` to spend `_amount` tokens on  its behalf. This is a modified version of the ERC20 approve function  to be a little bit safer\"},\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"`msg.sender` approves `_spender` to send `_amount` tokens on  its behalf, and then a function is triggered in the contract that is  being approved, `_spender`. This allows users to use their tokens to  interact with contracts in one function call instead of two\"},\"balanceOfAt(address,uint256)\":{\"notice\":\"/////////////\"},\"changeController(address)\":{\"notice\":\"Changes the controller of the contract\"},\"claimTokens(address)\":{\"notice\":\"///////This method can be used by the controller to extract mistakenly  sent tokens to this contract.\"},\"createCloneToken(string,uint8,string,uint256,bool)\":{\"notice\":\"/////////////Creates a new clone token with the initial distribution being  this token at `_snapshotBlock`\"},\"destroyTokens(address,uint256)\":{\"notice\":\"Burns `_amount` tokens from `_owner`\"},\"enableTransfers(bool)\":{\"notice\":\"/////////////Enables token holders to transfer their tokens freely if true\"},\"generateTokens(address,uint256)\":{\"notice\":\"/////////////Generates `_amount` tokens that are assigned to `_owner`\"},\"totalSupplyAt(uint256)\":{\"notice\":\"Total amount of tokens at a specific `_blockNumber`.\"},\"transfer(address,uint256)\":{\"notice\":\"////////////////Send `_amount` tokens to `_to` from `msg.sender`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Send `_amount` tokens to `_to` from `_from` on the condition it  is approved by `_from`\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/roderik/Development/dxc/contracts/contracts/DTXToken.sol\":\"DTXToken\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/roderik/Development/dxc/contracts/contracts/DTXToken.sol\":{\"keccak256\":\"0x1f6abe822ba6817bb7f6cc5d29b81d82a623b4bab6c8b90e6127c0674f80cebc\",\"urls\":[\"bzzr://c96c3a4168b34d0ba1da294597e8883177344504ef8e7350f594bfe5226e4406\",\"dweb:/ipfs/QmRBVX9y1e6cRLjse5LUF1Tkr85DiqzqJoKTkwLxUKA32h\"]},\"/Users/roderik/Development/dxc/contracts/contracts/external/Controlled.sol\":{\"keccak256\":\"0x1a9a754c4dfdf2f18efc3113675b6fe400a5e0b5be406a2bcf31771e014dbdbb\",\"urls\":[\"bzzr://bcb87ec8597b68db96911e71d2415152b84bcad7bc0eeb440d0f7f5957f103c7\",\"dweb:/ipfs/QmTM8wuuzARFev46eyMNg716hNrLCGPSmZySnpMDQN6re4\"]},\"/Users/roderik/Development/dxc/contracts/contracts/external/MiniMeToken.sol\":{\"keccak256\":\"0x57d93053b203c38b471b89eb504546dec27935564acc3e9048fc4ac6641b1bc5\",\"urls\":[\"bzzr://95eca857f72d858d87e41d6cb9aff7f25292173365b399be02644af21c559e90\",\"dweb:/ipfs/QmfHp6RFVFYDEnkpeXhf9ru8uwaULQS4vtdoKbAogGGHxv\"]},\"/Users/roderik/Development/dxc/contracts/contracts/external/TokenController.sol\":{\"keccak256\":\"0x08959a8e35be3d37faa87ae398a446760924dab709545674432fda35484444f1\",\"urls\":[\"bzzr://c41dcfb4188c82c7a8d449cf91f5cf079897f68ab27240fc85fc30b0473eec17\",\"dweb:/ipfs/QmbDGvC6wVXtkyUiqGkdMJbjFMjue85AJLoSprhRec7tqv\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101665760003560e01c8063827f32c0116100d1578063cae9ca511161008a578063df8de3e711610064578063df8de3e7146107d2578063e77772fe14610805578063f41e60c51461081a578063f77c47911461084657610166565b8063cae9ca5114610696578063d3ce77fe1461075e578063dd62ed3e1461079757610166565b8063827f32c0146105bb57806395d89b41146105f4578063981b24d014610609578063a9059cbb14610633578063bef97c871461066c578063c5bcc4f11461068157610166565b80633cebb823116101235780633cebb8231461038a5780634ee2cd7e146103bd57806354fd4d50146103f65780636638c0871461040b57806370a082311461057357806380a54001146105a657610166565b806306fdde0314610209578063095ea7b31461029357806317634514146102e057806318160ddd1461030757806323b872dd1461031c578063313ce5671461035f575b60005461017b906001600160a01b031661085b565b61018457600080fd5b60005460408051633d230c1560e21b815233600482015290516001600160a01b039092169163f48c3054913491602480830192602092919082900301818588803b1580156101d157600080fd5b505af11580156101e5573d6000803e3d6000fd5b50505050506040513d60208110156101fc57600080fd5b505161020757600080fd5b005b34801561021557600080fd5b5061021e610882565b6040805160208082528351818301528351919283929083019185019080838360005b83811015610258578181015183820152602001610240565b50505050905090810190601f1680156102855780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561029f57600080fd5b506102cc600480360360408110156102b657600080fd5b506001600160a01b03813516906020013561090f565b604080519115158252519081900360200190f35b3480156102ec57600080fd5b506102f5610a6e565b60408051918252519081900360200190f35b34801561031357600080fd5b506102f5610a74565b34801561032857600080fd5b506102cc6004803603606081101561033f57600080fd5b506001600160a01b03813581169160208101359091169060400135610a85565b34801561036b57600080fd5b50610374610b1a565b6040805160ff9092168252519081900360200190f35b34801561039657600080fd5b50610207600480360360208110156103ad57600080fd5b50356001600160a01b0316610b23565b3480156103c957600080fd5b506102f5600480360360408110156103e057600080fd5b506001600160a01b038135169060200135610b5c565b34801561040257600080fd5b5061021e610ca2565b34801561041757600080fd5b50610557600480360360a081101561042e57600080fd5b81019060208101813564010000000081111561044957600080fd5b82018360208201111561045b57600080fd5b8035906020019184600183028401116401000000008311171561047d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929560ff8535169590949093506040810192506020013590506401000000008111156104db57600080fd5b8201836020820111156104ed57600080fd5b8035906020019184600183028401116401000000008311171561050f57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050823593505050602001351515610cfd565b604080516001600160a01b039092168252519081900360200190f35b34801561057f57600080fd5b506102f56004803603602081101561059657600080fd5b50356001600160a01b0316610f42565b3480156105b257600080fd5b50610557610f4e565b3480156105c757600080fd5b506102cc600480360360408110156105de57600080fd5b506001600160a01b038135169060200135610f5d565b34801561060057600080fd5b5061021e611029565b34801561061557600080fd5b506102f56004803603602081101561062c57600080fd5b5035611084565b34801561063f57600080fd5b506102cc6004803603604081101561065657600080fd5b506001600160a01b038135169060200135611171565b34801561067857600080fd5b506102cc61118e565b34801561068d57600080fd5b506102f5611197565b3480156106a257600080fd5b506102cc600480360360608110156106b957600080fd5b6001600160a01b03823516916020810135918101906060810160408201356401000000008111156106e957600080fd5b8201836020820111156106fb57600080fd5b8035906020019184600183028401116401000000008311171561071d57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061119d945050505050565b34801561076a57600080fd5b506102cc6004803603604081101561078157600080fd5b506001600160a01b03813516906020013561129d565b3480156107a357600080fd5b506102f5600480360360408110156107ba57600080fd5b506001600160a01b0381358116916020013516611365565b3480156107de57600080fd5b50610207600480360360208110156107f557600080fd5b50356001600160a01b0316611390565b34801561081157600080fd5b50610557611540565b34801561082657600080fd5b506102076004803603602081101561083d57600080fd5b50351515611554565b34801561085257600080fd5b5061055761157e565b6000806001600160a01b03831661087657600091505061087d565b5050803b15155b919050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109075780601f106108dc57610100808354040283529160200191610907565b820191906000526020600020905b8154815290600101906020018083116108ea57829003601f168201915b505050505081565b600b5460009060ff1661092157600080fd5b81158061094f57503360009081526009602090815260408083206001600160a01b0387168452909152902054155b61095857600080fd5b60005461096d906001600160a01b031661085b565b15610a0657600080546040805163da682aeb60e01b81523360048201526001600160a01b038781166024830152604482018790529151919092169263da682aeb92606480820193602093909283900390910190829087803b1580156109d157600080fd5b505af11580156109e5573d6000803e3d6000fd5b505050506040513d60208110156109fb57600080fd5b5051610a0657600080fd5b3360008181526009602090815260408083206001600160a01b03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60075481565b6000610a7f43611084565b90505b90565b600080546001600160a01b03163314610b0557600b5460ff16610aa757600080fd5b6001600160a01b0384166000908152600960209081526040808320338452909152902054821115610ada57506000610b13565b6001600160a01b03841660009081526009602090815260408083203384529091529020805483900390555b610b1084848461158d565b90505b9392505050565b60025460ff1681565b6000546001600160a01b03163314610b3a57600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0382166000908152600860205260408120541580610bb657506001600160a01b03831660009081526008602052604081208054849290610b9f57fe5b6000918252602090912001546001600160801b0316115b15610c79576005546001600160a01b031615610c71576005546006546001600160a01b0390911690634ee2cd7e908590610bf1908690611760565b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b031681526020018281526020019250505060206040518083038186803b158015610c3e57600080fd5b505afa158015610c52573d6000803e3d6000fd5b505050506040513d6020811015610c6857600080fd5b50519050610a68565b506000610a68565b6001600160a01b0383166000908152600860205260409020610c9b9083611776565b9050610a68565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109075780601f106108dc57610100808354040283529160200191610907565b600082610d08574392505b6000600b60019054906101000a90046001600160a01b03166001600160a01b0316635b7b72c130868a8a8a896040518763ffffffff1660e01b815260040180876001600160a01b03166001600160a01b03168152602001868152602001806020018560ff1660ff1681526020018060200184151515158152602001838103835287818151815260200191508051906020019080838360005b83811015610db8578181015183820152602001610da0565b50505050905090810190601f168015610de55780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015610e18578181015183820152602001610e00565b50505050905090810190601f168015610e455780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015610e6a57600080fd5b505af1158015610e7e573d6000803e3d6000fd5b505050506040513d6020811015610e9457600080fd5b505160408051633cebb82360e01b815233600482015290519192506001600160a01b03831691633cebb8239160248082019260009290919082900301818387803b158015610ee157600080fd5b505af1158015610ef5573d6000803e3d6000fd5b50506040805187815290516001600160a01b03851693507f086c875b377f900b07ce03575813022f05dd10ed7640b5282cf6d3c3fc352ade92509081900360200190a29695505050505050565b6000610a688243610b5c565b6005546001600160a01b031681565b600080546001600160a01b03163314610f7557600080fd5b6000610f7f610a74565b9050808382011015610f9057600080fd5b6000610f9b85610f42565b9050808482011015610fac57600080fd5b610fb9600a8584016118a6565b6001600160a01b0385166000908152600860205260409020610fdd908286016118a6565b6040805185815290516001600160a01b038716916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3506001949350505050565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109075780601f106108dc57610100808354040283529160200191610907565b600a5460009015806110b7575081600a6000815481106110a057fe5b6000918252602090912001546001600160801b0316115b1561115f576005546001600160a01b031615611157576005546006546001600160a01b039091169063981b24d0906110f0908590611760565b6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561112457600080fd5b505afa158015611138573d6000803e3d6000fd5b505050506040513d602081101561114e57600080fd5b5051905061087d565b50600061087d565b61116a600a83611776565b905061087d565b600b5460009060ff1661118357600080fd5b610b1333848461158d565b600b5460ff1681565b60065481565b60006111a9848461090f565b6111b257600080fd5b604051638f4ffcb160e01b815233600482018181526024830186905230604484018190526080606485019081528651608486015286516001600160a01b038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b8381101561122c578181015183820152602001611214565b50505050905090810190601f1680156112595780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b15801561127b57600080fd5b505af115801561128f573d6000803e3d6000fd5b506001979650505050505050565b600080546001600160a01b031633146112b557600080fd5b60006112bf610a74565b9050828110156112ce57600080fd5b60006112d985610f42565b9050838110156112e857600080fd5b6112f5600a8584036118a6565b6001600160a01b0385166000908152600860205260409020611319908583036118a6565b6040805185815290516000916001600160a01b038816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3506001949350505050565b6001600160a01b03918216600090815260096020908152604080832093909416825291909152205490565b6000546001600160a01b031633146113a757600080fd5b6001600160a01b0381166113f657600080546040516001600160a01b0390911691303180156108fc02929091818181858888f193505050501580156113f0573d6000803e3d6000fd5b5061153d565b604080516370a0823160e01b8152306004820152905182916000916001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561144157600080fd5b505afa158015611455573d6000803e3d6000fd5b505050506040513d602081101561146b57600080fd5b5051600080546040805163a9059cbb60e01b81526001600160a01b0392831660048201526024810185905290519394509085169263a9059cbb92604480840193602093929083900390910190829087803b1580156114c857600080fd5b505af11580156114dc573d6000803e3d6000fd5b505050506040513d60208110156114f257600080fd5b50506000546040805183815290516001600160a01b03928316928616917ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c919081900360200190a350505b50565b600b5461010090046001600160a01b031681565b6000546001600160a01b0316331461156b57600080fd5b600b805460ff1916911515919091179055565b6000546001600160a01b031681565b60008161159c57506001610b13565b43600654106115aa57600080fd5b6001600160a01b038316158015906115cb57506001600160a01b0383163014155b6115d457600080fd5b60006115e08543610b5c565b9050828110156115f4576000915050610b13565b600054611609906001600160a01b031661085b565b156116a4576000805460408051634a39314960e01b81526001600160a01b03898116600483015288811660248301526044820188905291519190921692634a39314992606480820193602093909283900390910190829087803b15801561166f57600080fd5b505af1158015611683573d6000803e3d6000fd5b505050506040513d602081101561169957600080fd5b50516116a457600080fd5b6001600160a01b03851660009081526008602052604090206116c8908483036118a6565b60006116d48543610b5c565b90508084820110156116e557600080fd5b6001600160a01b0385166000908152600860205260409020611709908286016118a6565b846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a350600195945050505050565b600081831061176f5781610b13565b5090919050565b815460009061178757506000610a68565b82548390600019810190811061179957fe5b6000918252602090912001546001600160801b031682106117e9578254839060001981019081106117c657fe5b600091825260209091200154600160801b90046001600160801b03169050610a68565b826000815481106117f657fe5b6000918252602090912001546001600160801b031682101561181a57506000610a68565b8254600090600019015b8181111561187557600060026001838501010490508486828154811061184657fe5b6000918252602090912001546001600160801b0316116118685780925061186f565b6001810391505b50611824565b84828154811061188157fe5b600091825260209091200154600160801b90046001600160801b031695945050505050565b815415806118da575081544390839060001981019081106118c357fe5b6000918252602090912001546001600160801b0316105b1561194157815460009083906118f3826001830161197f565b815481106118fd57fe5b600091825260209091200180546001600160801b03848116600160801b024382166fffffffffffffffffffffffffffffffff1990931692909217161790555061197b565b81546000908390600019810190811061195657fe5b600091825260209091200180546001600160801b03808516600160801b029116179055505b5050565b8154818355818111156119a3576000838152602090206119a39181019083016119a8565b505050565b610a8291905b808211156119c257600081556001016119ae565b509056fea265627a7a72305820a58b87a7aeade4a93155b555b38fb157b78c309e04700a0b391d4b96346ef12964736f6c634300050a0032",
  "sourceMap": "1805:33:5:-;64:409:0;1805:33:5;;64:409:0;1805:33:5;;;;;;;;;;;;;;:::i;:::-;;102:368:0;8:9:-1;5:2;;;30:1;27;20:12;5:2;102:368:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;102:368:0;4145:691:5;;;;;;;;;;;;102:368:0;4145:691:5;;;;;;;;;;;;;;;;;;;;;;189:1:0;294:23:3;;-1:-1:-1;;;;;;294:23:3;307:10;294:23;;;4395:12:5;:48;;-1:-1:-1;;;;;4395:48:5;;294:23:3;4395:48:5;-1:-1:-1;;;;;;4395:48:5;;;;;;4449:17;;102:368:0;;189:1;;;;4145:691:5;;338:2:0;;4145:691:5;;416:4:0;;4449:17:5;;416:4:0;;4449:17:5;:::i;:::-;-1:-1:-1;4520:8:5;:24;;-1:-1:-1;;4520:24:5;;;;;;;4595:21;;;;:6;;:21;;;;;:::i;:::-;-1:-1:-1;4668:11:5;:39;;-1:-1:-1;;;;;;4668:39:5;-1:-1:-1;;;;;4668:39:5;;;;;;;;;;;-1:-1:-1;;;4713:19:5;:42;4761:16;:36;;-1:-1:-1;;4761:36:5;;;;;;;;;;-1:-1:-1;;4819:12:5;4803:13;:28;64:409:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;64:409:0;;;-1:-1:-1;64:409:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "64:409:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19055:10:5;;19044:22;;-1:-1:-1;;;;;19055:10:5;19044;:22::i;:::-;19036:31;;;;;;19097:10;;19081:69;;;-1:-1:-1;;;19081:69:5;;19139:10;19081:69;;;;;;-1:-1:-1;;;;;19097:10:5;;;;19081:40;;19128:9;;19081:69;;;;;;;;;;;;;;19128:9;19097:10;19081:69;;;5:2:-1;;;;30:1;27;20:12;5:2;19081:69:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19081:69:5;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19081:69:5;19073:78;;;;;;64:409:0;1585:18:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1585:18:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1585:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8618:778;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8618:778:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8618:778:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2677:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2677:25:5;;;:::i;:::-;;;;;;;;;;;;;;;;10783:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10783:95:5;;;:::i;5624:647::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5624:647:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5624:647:5;;;;;;;;;;;;;;;;;:::i;1663:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1663:21:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;439:118:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;439:118:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;439:118:3;-1:-1:-1;;;;;439:118:3;;:::i;11222:887:5:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11222:887:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;11222:887:5;;;;;;;;:::i;1805:33::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1805:33:5;;;:::i;13862:717::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13862:717:5;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;13862:717:5;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;13862:717:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;13862:717:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;13862:717:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;13862:717:5;;;;;;;;;;;-1:-1:-1;13862:717:5;;;;-1:-1:-1;13862:717:5;;;;-1:-1:-1;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;13862:717:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;13862:717:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;13862:717:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;13862:717:5;;-1:-1:-1;;13862:717:5;;;-1:-1:-1;;;13862:717:5;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;13862:717:5;;;;;;;;;;;;;;8109:124;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8109:124:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8109:124:5;-1:-1:-1;;;;;8109:124:5;;:::i;2386:30::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2386:30:5;;;:::i;14900:554::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14900:554:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;14900:554:5;;;;;;;;:::i;1742:20::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1742:20:5;;;:::i;12314:833::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12314:833:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12314:833:5;;:::i;5125:163::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5125:163:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5125:163:5;;;;;;;;:::i;3236:28::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3236:28:5;;;:::i;2567:31::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2567:31:5;;;:::i;10343:322::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10343:322:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;10343:322:5;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;10343:322:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10343:322:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10343:322:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;10343:322:5;;-1:-1:-1;10343:322:5;;-1:-1:-1;;;;;10343:322:5:i;15674:478::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15674:478:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;15674:478:5;;;;;;;;:::i;9703:139::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9703:139:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;9703:139:5;;;;;;;;;;:::i;19446:367::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19446:367:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19446:367:5;-1:-1:-1;;;;;19446:367:5;;:::i;3318:38::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3318:38:5;;;:::i;16369:118::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16369:118:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16369:118:5;;;;:::i;233:33:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;233:33:3;;;:::i;18409:199:5:-;18466:4;;-1:-1:-1;;;;;18497:19:5;;18493:37;;18525:5;18518:12;;;;;18493:37;-1:-1:-1;;18561:18:5;;18597:6;;18409:199;;;;:::o;1585:18::-;;;;;;;;;;;;;;;-1:-1:-1;;1585:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8618:778::-;8714:16;;8686:12;;8714:16;;8706:25;;;;;;9034:12;;;9033:54;;-1:-1:-1;9060:10:5;9052:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;9052:29:5;;;;;;;;;;:34;9033:54;9025:63;;;;;;9174:10;;9163:22;;-1:-1:-1;;;;;9174:10:5;9163;:22::i;:::-;9159:120;;;9219:10;;;9203:68;;;-1:-1:-1;;;9203:68:5;;9241:10;9203:68;;;;-1:-1:-1;;;;;9203:68:5;;;;;;;;;;;;;;;9219:10;;;;;9203:37;;:68;;;;;;;;;;;;;;;;;;9219:10;9203:68;;;5:2:-1;;;;30:1;27;20:12;5:2;9203:68:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9203:68:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9203:68:5;9195:77;;;;;;9293:10;9285:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;9285:29:5;;;;;;;;;;;;:39;;;9335;;;;;;;9285:29;;9293:10;9335:39;;;;;;;;;;;-1:-1:-1;9387:4:5;8618:778;;;;;:::o;2677:25::-;;;;:::o;10783:95::-;10827:4;10846:27;10860:12;10846:13;:27::i;:::-;10839:34;;10783:95;;:::o;5624:647::-;5710:12;6008:10;;-1:-1:-1;;;;;6008:10:5;5994;:24;5990:233;;6036:16;;;;6028:25;;;;;;-1:-1:-1;;;;;6121:14:5;;;;;;:7;:14;;;;;;;;6136:10;6121:26;;;;;;;;:36;-1:-1:-1;6117:54:5;;;-1:-1:-1;6166:5:5;6159:12;;6117:54;-1:-1:-1;;;;;6179:14:5;;;;;;:7;:14;;;;;;;;6194:10;6179:26;;;;;;;:37;;;;;;;5990:233;6235:31;6246:5;6253:3;6258:7;6235:10;:31::i;:::-;6228:38;;5624:647;;;;;;:::o;1663:21::-;;;;;;:::o;439:118:3:-;212:10;;-1:-1:-1;;;;;212:10:3;198;:24;190:33;;;;;;525:10;:27;;-1:-1:-1;;;;;;525:27:3;-1:-1:-1;;;;;525:27:3;;;;;;;;;;439:118::o;11222:887:5:-;-1:-1:-1;;;;;11640:16:5;;11303:4;11640:16;;;:8;:16;;;;;:23;:28;;11639:90;;-1:-1:-1;;;;;;11684:16:5;;;;;;:8;:16;;;;;:19;;11716:12;;11684:16;:19;;;;;;;;;;;;;:29;-1:-1:-1;;;;;11684:29:5;:44;11639:90;11635:468;;;11753:11;;-1:-1:-1;;;;;11753:11:5;11745:34;11741:207;;11800:11;;11850:19;;-1:-1:-1;;;;;11800:11:5;;;;:23;;11824:6;;11832:38;;11836:12;;11832:3;:38::i;:::-;11800:71;;;;;;;;;;;;;-1:-1:-1;;;;;11800:71:5;-1:-1:-1;;;;;11800:71:5;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11800:71:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11800:71:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11800:71:5;;-1:-1:-1;11793:78:5;;11741:207;-1:-1:-1;11936:1:5;11929:8;;11635:468;-1:-1:-1;;;;;12063:16:5;;;;;;:8;:16;;;;;12052:42;;12081:12;12052:10;:42::i;:::-;12045:49;;;;1805:33;;;;;;;;;;;;;;;-1:-1:-1;;1805:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13862:717;14076:7;14095:19;14091:54;;14133:12;14116:29;;14091:54;14151:22;14176:12;;;;;;;;;-1:-1:-1;;;;;14176:12:5;-1:-1:-1;;;;;14176:29:5;;14223:4;14238:14;14262:15;14287:18;14315:17;14342;14176:193;;;;;;;;;;;;;-1:-1:-1;;;;;14176:193:5;-1:-1:-1;;;;;14176:193:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14176:193:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14176:193:5;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14176:193:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14176:193:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14176:193:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14176:193:5;14376:39;;;-1:-1:-1;;;14376:39:5;;14404:10;14376:39;;;;;;14176:193;;-1:-1:-1;;;;;;14376:27:5;;;;;:39;;;;;-1:-1:-1;;14376:39:5;;;;;;;;-1:-1:-1;14376:27:5;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;14376:39:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;14492:50:5;;;;;;;;-1:-1:-1;;;;;14492:50:5;;;-1:-1:-1;14492:50:5;;-1:-1:-1;14492:50:5;;;;;;;;14563:10;13862:717;-1:-1:-1;;;;;;13862:717:5:o;8109:124::-;8165:15;8195:33;8207:6;8215:12;8195:11;:33::i;2386:30::-;;;-1:-1:-1;;;;;2386:30:5;;:::o;14900:554::-;14988:4;212:10:3;;-1:-1:-1;;;;;212:10:3;198;:24;190:33;;;;;;15000:19:5;15022:13;:11;:13::i;:::-;15000:35;;15077:14;15066:7;15049:14;:24;:42;;15041:51;;;;;;15120:22;15145:17;15155:6;15145:9;:17::i;:::-;15120:42;;15207:17;15196:7;15176:17;:27;:48;;15168:57;;;;;;15253:62;15270:18;15307:7;15290:14;:24;15253:16;:62::i;:::-;-1:-1:-1;;;;;15338:16:5;;;;;;:8;:16;;;;;15321:63;;15356:27;;;15321:16;:63::i;:::-;15395:37;;;;;;;;-1:-1:-1;;;;;15395:37:5;;;15412:1;;15395:37;;;;;;;;;-1:-1:-1;15445:4:5;;14900:554;-1:-1:-1;;;;14900:554:5:o;1742:20::-;;;;;;;;;;;;;;;-1:-1:-1;;1742:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12314:833;12725:18;:25;12376:4;;12725:30;;12724:92;;;12803:12;12769:18;12788:1;12769:21;;;;;;;;;;;;;;;;;:31;-1:-1:-1;;;;;12769:31:5;:46;12724:92;12720:423;;;12838:11;;-1:-1:-1;;;;;12838:11:5;12830:34;12826:164;;12883:11;;12927:19;;-1:-1:-1;;;;;12883:11:5;;;;:25;;12909:38;;12913:12;;12909:3;:38::i;:::-;12883:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12883:65:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12883:65:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12883:65:5;;-1:-1:-1;12876:72:5;;12826:164;-1:-1:-1;12980:1:5;12973:8;;12720:423;13092:44;13103:18;13123:12;13092:10;:44::i;:::-;13085:51;;;;5125:163;5217:16;;5189:12;;5217:16;;5209:25;;;;;;5247:36;5258:10;5270:3;5275:7;5247:10;:36::i;3236:28::-;;;;;;:::o;2567:31::-;;;;:::o;10343:322::-;10446:12;10474:26;10482:8;10492:7;10474;:26::i;:::-;10466:35;;;;;;10508:134;;-1:-1:-1;;;10508:134:5;;10566:10;10508:134;;;;;;;;;;;;10611:4;10508:134;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10508:48:5;;;;;10566:10;10586:7;;10611:4;10626:10;;10508:134;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10508:134:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10508:134:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;10656:4:5;;10343:322;-1:-1:-1;;;;;;;10343:322:5:o;15674:478::-;15761:4;212:10:3;;-1:-1:-1;;;;;212:10:3;198;:24;190:33;;;;;;15773:19:5;15795:13;:11;:13::i;:::-;15773:35;;15840:7;15822:14;:25;;15814:34;;;;;;15854:24;15881:17;15891:6;15881:9;:17::i;:::-;15854:44;;15935:7;15912:19;:30;;15904:39;;;;;;15949:62;15966:18;16003:7;15986:14;:24;15949:16;:62::i;:::-;-1:-1:-1;;;;;16034:16:5;;;;;;:8;:16;;;;;16017:65;;16052:29;;;16017:16;:65::i;:::-;16093:37;;;;;;;;16118:1;;-1:-1:-1;;;;;16093:37:5;;;;;;;;;;;;-1:-1:-1;16143:4:5;;15674:478;-1:-1:-1;;;;15674:478:5:o;9703:139::-;-1:-1:-1;;;;;9812:15:5;;;9780:17;9812:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;9703:139::o;19446:367::-;212:10:3;;-1:-1:-1;;;;;212:10:3;198;:24;190:33;;;;;;-1:-1:-1;;;;;19523:22:5;;19519:99;;19555:10;;;:42;;-1:-1:-1;;;;;19555:10:5;;;;19583:4;19575:21;19555:42;;;;;19575:21;;19555:42;:10;:42;19575:21;19555:10;:42;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19555:42:5;19605:7;;19519:99;19684:30;;;-1:-1:-1;;;19684:30:5;;19708:4;19684:30;;;;;;19656:6;;19624:17;;-1:-1:-1;;;;;19684:15:5;;;;;:30;;;;;;;;;;;;;;:15;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;19684:30:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19684:30:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19684:30:5;19735:10;;;19720:35;;;-1:-1:-1;;;19720:35:5;;-1:-1:-1;;;;;19735:10:5;;;19720:35;;;;;;;;;;;;19684:30;;-1:-1:-1;19720:14:5;;;;;;:35;;;;;19684:30;;19720:35;;;;;;;;;;;:14;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;19720:35:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19720:35:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;19788:10:5;;19766:42;;;;;;;;-1:-1:-1;;;;;19788:10:5;;;;19766:42;;;;;;;;;19720:35;19766:42;;;225:1:3;;;19446:367:5;:::o;3318:38::-;;;;;;-1:-1:-1;;;;;3318:38:5;;:::o;16369:118::-;212:10:3;;-1:-1:-1;;;;;212:10:3;198;:24;190:33;;;;;;16446:16:5;:36;;-1:-1:-1;;16446:36:5;;;;;;;;;;16369:118::o;233:33:3:-;;;-1:-1:-1;;;;;233:33:3;;:::o;6636:1344:5:-;6718:4;6734:12;6730:44;;-1:-1:-1;6763:4:5;6756:11;;6730:44;6810:12;6788:19;;:34;6780:43;;;;;;-1:-1:-1;;;;;6904:17:5;;;;;;6903:45;;-1:-1:-1;;;;;;6927:20:5;;6942:4;6927:20;;6903:45;6895:54;;;;;;7069:24;7096:32;7108:5;7115:12;7096:11;:32::i;:::-;7069:59;;7160:7;7138:19;:29;7134:62;;;7184:5;7177:12;;;;;7134:62;7268:10;;7257:22;;-1:-1:-1;;;;;7268:10:5;7257;:22::i;:::-;7253:111;;;7313:10;;;7297:59;;;-1:-1:-1;;;7297:59:5;;-1:-1:-1;;;;;7297:59:5;;;;;;;;;;;;;;;;;;;;;;7313:10;;;;;7297:38;;:59;;;;;;;;;;;;;;;;;;7313:10;7297:59;;;5:2:-1;;;;30:1;27;20:12;5:2;7297:59:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7297:59:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7297:59:5;7289:68;;;;;;-1:-1:-1;;;;;7487:15:5;;;;;;:8;:15;;;;;7470:64;;7504:29;;;7470:16;:64::i;:::-;7642:22;7667:30;7679:3;7684:12;7667:11;:30::i;:::-;7642:55;;7742:17;7731:7;7711:17;:27;:48;;7703:57;;;;;;-1:-1:-1;;;;;7805:13:5;;;;;;:8;:13;;;;;7788:60;;7820:27;;;7788:16;:60::i;:::-;7944:3;-1:-1:-1;;;;;7928:29:5;7937:5;-1:-1:-1;;;;;7928:29:5;;7949:7;7928:29;;;;;;;;;;;;;;;;;;-1:-1:-1;7971:4:5;;6636:1344;-1:-1:-1;;;;;6636:1344:5:o;18676:89::-;18728:4;18751:1;18747;:5;:13;;18759:1;18747:13;;;-1:-1:-1;18755:1:5;;18676:89;-1:-1:-1;18676:89:5:o;16851:671::-;16960:18;;16944:4;;16956:37;;-1:-1:-1;16992:1:5;16985:8;;16956:37;17063:18;;17051:11;;-1:-1:-1;;17063:20:5;;;17051:33;;;;;;;;;;;;;;;:43;-1:-1:-1;;;;;17051:43:5;17041:53;;17037:111;;17121:18;;17109:11;;-1:-1:-1;;17121:20:5;;;17109:33;;;;;;;;;;;;;;;:39;-1:-1:-1;;;17109:39:5;;-1:-1:-1;;;;;17109:39:5;;-1:-1:-1;17102:46:5;;17037:111;17167:11;17179:1;17167:14;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;;;17167:24:5;17158:33;;17154:47;;;-1:-1:-1;17200:1:5;17193:8;;17154:47;17284:18;;17255:8;;-1:-1:-1;;17284:20:5;17310:173;17323:3;17317;:9;17310:173;;;17336:8;17364:1;17360;17348:9;;;:13;17347:18;17336:29;;17405:6;17377:11;17389:3;17377:16;;;;;;;;;;;;;;;;;:26;-1:-1:-1;;;;;17377:26:5;:34;17373:104;;17429:3;17423:9;;17373:104;;;17467:1;17463:3;:5;17457:11;;17373:104;17310:173;;;;17495:11;17507:3;17495:16;;;;;;;;;;;;;;;;;:22;-1:-1:-1;;;17495:22:5;;-1:-1:-1;;;;;17495:22:5;;16851:671;-1:-1:-1;;;;;16851:671:5:o;17730:516::-;17827:18;;:23;;17826:94;;-1:-1:-1;17872:18:5;;17907:12;;17860:11;;-1:-1:-1;;17872:21:5;;;17860:34;;;;;;;;;;;;;;;:44;-1:-1:-1;;;;;17860:44:5;:59;17826:94;17822:420;;;17978:20;;17930:32;;17965:11;;17978:20;17965:11;17978:20;;;;:::i;:::-;17965:35;;;;;;;;;;;;;;;;;18008:48;;-1:-1:-1;;;;;18064:37:5;;;-1:-1:-1;;;18064:37:5;18043:12;18008:48;;-1:-1:-1;;18008:48:5;;;;;;;18064:37;;;;-1:-1:-1;17822:420:5;;;18169:18;;18122:32;;18157:11;;-1:-1:-1;;18169:20:5;;;18157:33;;;;;;;;;;;;;;;18198:37;;-1:-1:-1;;;;;18198:37:5;;;-1:-1:-1;;;18198:37:5;;;;;;-1:-1:-1;17822:420:5;17730:516;;:::o;64:409:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./external/MiniMeToken.sol\";\n\n\ncontract DTXToken is MiniMeToken {\n\n  constructor(address _tokenFactory) public MiniMeToken (\n    _tokenFactory,\n    address(0),             // no parent token\n    0,                      // no snapshot block number from parent\n    \"DaTa eXchange Token\",  // Token name\n    18,                     // Decimals\n    \"DTX\",                  // Symbol\n    true                    // Enable transfers\n    )\n  {}\n\n}\n",
  "sourcePath": "/Users/roderik/Development/dxc/contracts/contracts/DTXToken.sol",
  "ast": {
    "absolutePath": "/Users/roderik/Development/dxc/contracts/contracts/DTXToken.sol",
    "exportedSymbols": {
      "DTXToken": [22]
    },
    "id": 23,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "^", "0.5", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/Users/roderik/Development/dxc/contracts/contracts/external/MiniMeToken.sol",
        "file": "./external/MiniMeToken.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 23,
        "sourceUnit": 2139,
        "src": "25:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "MiniMeToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2095,
              "src": "85:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MiniMeToken_$2095",
                "typeString": "contract MiniMeToken"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "85:11:0"
          }
        ],
        "contractDependencies": [972, 2095],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 22,
        "linearizedBaseContracts": [22, 2095, 972],
        "name": "DTXToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 20,
              "nodeType": "Block",
              "src": "468:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 21,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9,
                    "name": "_tokenFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6,
                    "src": "162:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 11,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "189:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 10,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "181:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "181:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "228:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "446154612065586368616e676520546f6b656e",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "296:21:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_500a6f216ae091ab80cdff19bc4aa87de6a01745ac30e2811997571b7213c95f",
                      "typeString": "literal_string \"DaTa eXchange Token\""
                    },
                    "value": "DaTa eXchange Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "338:2:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "445458",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "378:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f08f358567a4069e6c681faa1a9c1fc1e908b61025c14683a1fecb26b925fcc6",
                      "typeString": "literal_string \"DTX\""
                    },
                    "value": "DTX"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "416:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 18,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8,
                  "name": "MiniMeToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2095,
                  "src": "144:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MiniMeToken_$2095_$",
                    "typeString": "type(contract MiniMeToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "144:321:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "name": "_tokenFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "114:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "114:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "113:23:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "468:0:0"
            },
            "scope": 22,
            "src": "102:368:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 23,
        "src": "64:409:0"
      }
    ],
    "src": "0:474:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/roderik/Development/dxc/contracts/contracts/DTXToken.sol",
    "exportedSymbols": {
      "DTXToken": [22]
    },
    "id": 23,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "^", "0.5", ".0"],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/Users/roderik/Development/dxc/contracts/contracts/external/MiniMeToken.sol",
        "file": "./external/MiniMeToken.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 23,
        "sourceUnit": 2139,
        "src": "25:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "MiniMeToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2095,
              "src": "85:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MiniMeToken_$2095",
                "typeString": "contract MiniMeToken"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "85:11:0"
          }
        ],
        "contractDependencies": [972, 2095],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 22,
        "linearizedBaseContracts": [22, 2095, 972],
        "name": "DTXToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 20,
              "nodeType": "Block",
              "src": "468:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 21,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9,
                    "name": "_tokenFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6,
                    "src": "162:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 11,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "189:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 10,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "181:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "181:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "228:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "446154612065586368616e676520546f6b656e",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "296:21:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_500a6f216ae091ab80cdff19bc4aa87de6a01745ac30e2811997571b7213c95f",
                      "typeString": "literal_string \"DaTa eXchange Token\""
                    },
                    "value": "DaTa eXchange Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "338:2:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "445458",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "378:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f08f358567a4069e6c681faa1a9c1fc1e908b61025c14683a1fecb26b925fcc6",
                      "typeString": "literal_string \"DTX\""
                    },
                    "value": "DTX"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "416:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 18,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8,
                  "name": "MiniMeToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2095,
                  "src": "144:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MiniMeToken_$2095_$",
                    "typeString": "type(contract MiniMeToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "144:321:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "name": "_tokenFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "114:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "114:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "113:23:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "468:0:0"
            },
            "scope": 22,
            "src": "102:368:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 23,
        "src": "64:409:0"
      }
    ],
    "src": "0:474:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-29T17:33:11.694Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "This function makes it easy to read the `allowed[]` map",
        "params": {
          "_owner": "The address of the account that owns the token",
          "_spender": "The address of the account able to transfer the tokens"
        },
        "return": "Amount of remaining tokens of _owner that _spender is allowed  to spend"
      },
      "approve(address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to be approved for transfer",
          "_spender": "The address of the account able to transfer the tokens"
        },
        "return": "True if the approval was successful"
      },
      "approveAndCall(address,uint256,bytes)": {
        "params": {
          "_amount": "The amount of tokens to be approved for transfer",
          "_spender": "The address of the contract able to transfer the tokens"
        },
        "return": "True if the function call was successful"
      },
      "balanceOf(address)": {
        "params": {
          "_owner": "The address that's balance is being requested"
        },
        "return": "The balance of `_owner` at the current block"
      },
      "balanceOfAt(address,uint256)": {
        "details": "Queries the balance of `_owner` at a specific `_blockNumber`",
        "params": {
          "_blockNumber": "The block number when the balance is queried",
          "_owner": "The address from which the balance will be retrieved"
        },
        "return": "The balance at `_blockNumber`"
      },
      "changeController(address)": {
        "params": {
          "_newController": "The new controller of the contract"
        }
      },
      "claimTokens(address)": {
        "params": {
          "_token": "The address of the token contract that you want to recover  set to 0 in case you want to extract ether."
        }
      },
      "createCloneToken(string,uint8,string,uint256,bool)": {
        "params": {
          "_cloneDecimalUnits": "Number of decimals of the smallest unit",
          "_cloneTokenName": "Name of the clone token",
          "_cloneTokenSymbol": "Symbol of the clone token",
          "_snapshotBlock": "Block when the distribution of the parent token is  copied to set the initial distribution of the new clone token;  if the block is zero than the actual block, the current block is used",
          "_transfersEnabled": "True if transfers are allowed in the clone"
        },
        "return": "The address of the new MiniMeToken Contract"
      },
      "destroyTokens(address,uint256)": {
        "params": {
          "_amount": "The quantity of tokens to burn",
          "_owner": "The address that will lose the tokens"
        },
        "return": "True if the tokens are burned correctly"
      },
      "enableTransfers(bool)": {
        "params": {
          "_transfersEnabled": "True if transfers are allowed in the clone"
        }
      },
      "generateTokens(address,uint256)": {
        "params": {
          "_amount": "The quantity of tokens generated",
          "_owner": "The address that will be assigned the new tokens"
        },
        "return": "True if the tokens are generated correctly"
      },
      "totalSupply()": {
        "details": "This function makes it easy to get the total number of tokens",
        "return": "The total number of tokens"
      },
      "totalSupplyAt(uint256)": {
        "params": {
          "_blockNumber": "The block number when the totalSupply is queried"
        },
        "return": "The total amount of tokens at `_blockNumber`"
      },
      "transfer(address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to be transferred",
          "_to": "The address of the recipient"
        },
        "return": "Whether the transfer was successful or not"
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to be transferred",
          "_from": "The address holding the tokens being transferred",
          "_to": "The address of the recipient"
        },
        "return": "True if the transfer was successful"
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "`msg.sender` approves `_spender` to spend `_amount` tokens on  its behalf. This is a modified version of the ERC20 approve function  to be a little bit safer"
      },
      "approveAndCall(address,uint256,bytes)": {
        "notice": "`msg.sender` approves `_spender` to send `_amount` tokens on  its behalf, and then a function is triggered in the contract that is  being approved, `_spender`. This allows users to use their tokens to  interact with contracts in one function call instead of two"
      },
      "balanceOfAt(address,uint256)": {
        "notice": "/////////////"
      },
      "changeController(address)": {
        "notice": "Changes the controller of the contract"
      },
      "claimTokens(address)": {
        "notice": "///////This method can be used by the controller to extract mistakenly  sent tokens to this contract."
      },
      "createCloneToken(string,uint8,string,uint256,bool)": {
        "notice": "/////////////Creates a new clone token with the initial distribution being  this token at `_snapshotBlock`"
      },
      "destroyTokens(address,uint256)": {
        "notice": "Burns `_amount` tokens from `_owner`"
      },
      "enableTransfers(bool)": {
        "notice": "/////////////Enables token holders to transfer their tokens freely if true"
      },
      "generateTokens(address,uint256)": {
        "notice": "/////////////Generates `_amount` tokens that are assigned to `_owner`"
      },
      "totalSupplyAt(uint256)": {
        "notice": "Total amount of tokens at a specific `_blockNumber`."
      },
      "transfer(address,uint256)": {
        "notice": "////////////////Send `_amount` tokens to `_to` from `msg.sender`"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Send `_amount` tokens to `_to` from `_from` on the condition it  is approved by `_from`"
      }
    }
  }
}

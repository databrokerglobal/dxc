{
  "contractName": "DTXToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "creationBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newController",
          "type": "address"
        }
      ],
      "name": "changeController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "balanceOfAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_cloneTokenName",
          "type": "string"
        },
        {
          "name": "_cloneDecimalUnits",
          "type": "uint8"
        },
        {
          "name": "_cloneTokenSymbol",
          "type": "string"
        },
        {
          "name": "_snapshotBlock",
          "type": "uint256"
        },
        {
          "name": "_transfersEnabled",
          "type": "bool"
        }
      ],
      "name": "createCloneToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "parentToken",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "generateTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_blockNumber",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transfersEnabled",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "parentSnapShotBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        },
        {
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "approveAndCall",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "destroyTokens",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "remaining",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "tokenFactory",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_transfersEnabled",
          "type": "bool"
        }
      ],
      "name": "enableTransfers",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_tokenFactory",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_controller",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "ClaimedTokens",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_cloneToken",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_snapshotBlock",
          "type": "uint256"
        }
      ],
      "name": "NewCloneToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.10+commit.5a6ea5b1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"creationBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_cloneTokenName\",\"type\":\"string\"},{\"name\":\"_cloneDecimalUnits\",\"type\":\"uint8\"},{\"name\":\"_cloneTokenSymbol\",\"type\":\"string\"},{\"name\":\"_snapshotBlock\",\"type\":\"uint256\"},{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"createCloneToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"generateTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_blockNumber\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transfersEnabled\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"parentSnapShotBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyTokens\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"claimTokens\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"tokenFactory\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_transfersEnabled\",\"type\":\"bool\"}],\"name\":\"enableTransfers\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_tokenFactory\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_controller\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"ClaimedTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_cloneToken\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_snapshotBlock\",\"type\":\"uint256\"}],\"name\":\"NewCloneToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"This function makes it easy to read the `allowed[]` map\",\"params\":{\"_owner\":\"The address of the account that owns the token\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"return\":\"Amount of remaining tokens of _owner that _spender is allowed  to spend\"},\"approve(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be approved for transfer\",\"_spender\":\"The address of the account able to transfer the tokens\"},\"return\":\"True if the approval was successful\"},\"approveAndCall(address,uint256,bytes)\":{\"params\":{\"_amount\":\"The amount of tokens to be approved for transfer\",\"_spender\":\"The address of the contract able to transfer the tokens\"},\"return\":\"True if the function call was successful\"},\"balanceOf(address)\":{\"params\":{\"_owner\":\"The address that's balance is being requested\"},\"return\":\"The balance of `_owner` at the current block\"},\"balanceOfAt(address,uint256)\":{\"details\":\"Queries the balance of `_owner` at a specific `_blockNumber`\",\"params\":{\"_blockNumber\":\"The block number when the balance is queried\",\"_owner\":\"The address from which the balance will be retrieved\"},\"return\":\"The balance at `_blockNumber`\"},\"changeController(address)\":{\"params\":{\"_newController\":\"The new controller of the contract\"}},\"claimTokens(address)\":{\"params\":{\"_token\":\"The address of the token contract that you want to recover  set to 0 in case you want to extract ether.\"}},\"createCloneToken(string,uint8,string,uint256,bool)\":{\"params\":{\"_cloneDecimalUnits\":\"Number of decimals of the smallest unit\",\"_cloneTokenName\":\"Name of the clone token\",\"_cloneTokenSymbol\":\"Symbol of the clone token\",\"_snapshotBlock\":\"Block when the distribution of the parent token is  copied to set the initial distribution of the new clone token;  if the block is zero than the actual block, the current block is used\",\"_transfersEnabled\":\"True if transfers are allowed in the clone\"},\"return\":\"The address of the new MiniMeToken Contract\"},\"destroyTokens(address,uint256)\":{\"params\":{\"_amount\":\"The quantity of tokens to burn\",\"_owner\":\"The address that will lose the tokens\"},\"return\":\"True if the tokens are burned correctly\"},\"enableTransfers(bool)\":{\"params\":{\"_transfersEnabled\":\"True if transfers are allowed in the clone\"}},\"generateTokens(address,uint256)\":{\"params\":{\"_amount\":\"The quantity of tokens generated\",\"_owner\":\"The address that will be assigned the new tokens\"},\"return\":\"True if the tokens are generated correctly\"},\"totalSupply()\":{\"details\":\"This function makes it easy to get the total number of tokens\",\"return\":\"The total number of tokens\"},\"totalSupplyAt(uint256)\":{\"params\":{\"_blockNumber\":\"The block number when the totalSupply is queried\"},\"return\":\"The total amount of tokens at `_blockNumber`\"},\"transfer(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_to\":\"The address of the recipient\"},\"return\":\"Whether the transfer was successful or not\"},\"transferFrom(address,address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to be transferred\",\"_from\":\"The address holding the tokens being transferred\",\"_to\":\"The address of the recipient\"},\"return\":\"True if the transfer was successful\"}}},\"userdoc\":{\"methods\":{\"approve(address,uint256)\":{\"notice\":\"`msg.sender` approves `_spender` to spend `_amount` tokens on  its behalf. This is a modified version of the ERC20 approve function  to be a little bit safer\"},\"approveAndCall(address,uint256,bytes)\":{\"notice\":\"`msg.sender` approves `_spender` to send `_amount` tokens on  its behalf, and then a function is triggered in the contract that is  being approved, `_spender`. This allows users to use their tokens to  interact with contracts in one function call instead of two\"},\"balanceOfAt(address,uint256)\":{\"notice\":\"/////////////\"},\"changeController(address)\":{\"notice\":\"Changes the controller of the contract\"},\"claimTokens(address)\":{\"notice\":\"///////This method can be used by the controller to extract mistakenly  sent tokens to this contract.\"},\"createCloneToken(string,uint8,string,uint256,bool)\":{\"notice\":\"/////////////Creates a new clone token with the initial distribution being  this token at `_snapshotBlock`\"},\"destroyTokens(address,uint256)\":{\"notice\":\"Burns `_amount` tokens from `_owner`\"},\"enableTransfers(bool)\":{\"notice\":\"/////////////Enables token holders to transfer their tokens freely if true\"},\"generateTokens(address,uint256)\":{\"notice\":\"/////////////Generates `_amount` tokens that are assigned to `_owner`\"},\"totalSupplyAt(uint256)\":{\"notice\":\"Total amount of tokens at a specific `_blockNumber`.\"},\"transfer(address,uint256)\":{\"notice\":\"////////////////Send `_amount` tokens to `_to` from `msg.sender`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Send `_amount` tokens to `_to` from `_from` on the condition it  is approved by `_from`\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/roderik/Development/databrokerdao-dxc/contracts/contracts/DTXToken.sol\":\"DTXToken\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/roderik/Development/databrokerdao-dxc/contracts/contracts/DTXToken.sol\":{\"keccak256\":\"0x84a12107f128f4015c4d6cb79bcccdd0f2d0eed8e43bb83de1cc6901dadb7308\",\"urls\":[\"bzzr://17ad5e51fa9b393fa6fdd4572773c48940a9c9c59ac952d1dd712d7321458fa3\",\"dweb:/ipfs/QmPumH38GtmCxijwgTRvHXWcaPximA1ju2SFrUe6TQ6kXH\"]},\"/Users/roderik/Development/databrokerdao-dxc/contracts/contracts/external/Controlled.sol\":{\"keccak256\":\"0x8f2b41350e7c823ea20ab9d9b1ae63720c2807c2bcece3376f0eedfa570b53ae\",\"urls\":[\"bzzr://58a6de36bd908ada48b18d0b4d93c22dbfb4669e822eac426810040b45fb05bf\",\"dweb:/ipfs/QmZ84eGoSi2uuqbFZ2hYdiNLJiU4SNB5rCkeBZb7hAAXe8\"]},\"/Users/roderik/Development/databrokerdao-dxc/contracts/contracts/external/MiniMeToken.sol\":{\"keccak256\":\"0x3f88e318396d774096312c608571424dd0d7f8a6beca229986035a9ab1376122\",\"urls\":[\"bzzr://2892a2c9b0831c838b7b8f296262eb4af38a05e7d0f5f537161df83d30770b8f\",\"dweb:/ipfs/QmR5Qvrs7KVdDJEvfDZ5BfjAcHGN4dtBJswJyCfHLW5NWh\"]},\"/Users/roderik/Development/databrokerdao-dxc/contracts/contracts/external/TokenController.sol\":{\"keccak256\":\"0xbb567fe61dd080643e8a3e318e139445d9e74fffadd619010e04fd3bdf947594\",\"urls\":[\"bzzr://3117907a825f682094271a2e7c52e216fc8e28b06988331ca9d3a611a245aa84\",\"dweb:/ipfs/QmTbk4H4LwbpddfsREWTTCznYWEhn5hjujfJQPpZgHYXKq\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061016a5760003560e060020a90048063827f32c0116100d5578063cae9ca511161008e578063df8de3e711610068578063df8de3e7146107ef578063e77772fe14610822578063f41e60c514610837578063f77c4791146108635761016a565b8063cae9ca51146106b3578063d3ce77fe1461077b578063dd62ed3e146107b45761016a565b8063827f32c0146105d857806395d89b4114610611578063981b24d014610626578063a9059cbb14610650578063bef97c8714610689578063c5bcc4f11461069e5761016a565b80633cebb823116101275780633cebb823146103a75780634ee2cd7e146103da57806354fd4d50146104135780636638c0871461042857806370a082311461059057806380a54001146105c35761016a565b806306fdde0314610226578063095ea7b3146102b057806317634514146102fd57806318160ddd1461032457806323b872dd14610339578063313ce5671461037c575b60005461017f90600160a060020a0316610878565b61018857600080fd5b600054604080517ff48c30540000000000000000000000000000000000000000000000000000000081523360048201529051600160a060020a039092169163f48c3054913491602480830192602092919082900301818588803b1580156101ee57600080fd5b505af1158015610202573d6000803e3d6000fd5b50505050506040513d602081101561021957600080fd5b505161022457600080fd5b005b34801561023257600080fd5b5061023b61089f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561027557818101518382015260200161025d565b50505050905090810190601f1680156102a25780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156102bc57600080fd5b506102e9600480360360408110156102d357600080fd5b50600160a060020a03813516906020013561092c565b604080519115158252519081900360200190f35b34801561030957600080fd5b50610312610aa4565b60408051918252519081900360200190f35b34801561033057600080fd5b50610312610aaa565b34801561034557600080fd5b506102e96004803603606081101561035c57600080fd5b50600160a060020a03813581169160208101359091169060400135610abb565b34801561038857600080fd5b50610391610b50565b6040805160ff9092168252519081900360200190f35b3480156103b357600080fd5b50610224600480360360208110156103ca57600080fd5b5035600160a060020a0316610b59565b3480156103e657600080fd5b50610312600480360360408110156103fd57600080fd5b50600160a060020a038135169060200135610b9f565b34801561041f57600080fd5b5061023b610ce8565b34801561043457600080fd5b50610574600480360360a081101561044b57600080fd5b81019060208101813564010000000081111561046657600080fd5b82018360208201111561047857600080fd5b8035906020019184600183028401116401000000008311171561049a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929560ff8535169590949093506040810192506020013590506401000000008111156104f857600080fd5b82018360208201111561050a57600080fd5b8035906020019184600183028401116401000000008311171561052c57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050823593505050602001351515610d43565b60408051600160a060020a039092168252519081900360200190f35b34801561059c57600080fd5b50610312600480360360208110156105b357600080fd5b5035600160a060020a0316610fa4565b3480156105cf57600080fd5b50610574610fb0565b3480156105e457600080fd5b506102e9600480360360408110156105fb57600080fd5b50600160a060020a038135169060200135610fbf565b34801561061d57600080fd5b5061023b61108b565b34801561063257600080fd5b506103126004803603602081101561064957600080fd5b50356110e6565b34801561065c57600080fd5b506102e96004803603604081101561067357600080fd5b50600160a060020a0381351690602001356111d6565b34801561069557600080fd5b506102e96111f3565b3480156106aa57600080fd5b506103126111fc565b3480156106bf57600080fd5b506102e9600480360360608110156106d657600080fd5b600160a060020a038235169160208101359181019060608101604082013564010000000081111561070657600080fd5b82018360208201111561071857600080fd5b8035906020019184600183028401116401000000008311171561073a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611202945050505050565b34801561078757600080fd5b506102e96004803603604081101561079e57600080fd5b50600160a060020a03813516906020013561131b565b3480156107c057600080fd5b50610312600480360360408110156107d757600080fd5b50600160a060020a03813581169160200135166113e3565b3480156107fb57600080fd5b506102246004803603602081101561081257600080fd5b5035600160a060020a031661140e565b34801561082e57600080fd5b506105746115f0565b34801561084357600080fd5b506102246004803603602081101561085a57600080fd5b50351515611604565b34801561086f57600080fd5b5061057461162e565b600080600160a060020a03831661089357600091505061089a565b5050803b15155b919050565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109245780601f106108f957610100808354040283529160200191610924565b820191906000526020600020905b81548152906001019060200180831161090757829003601f168201915b505050505081565b600b5460009060ff1661093e57600080fd5b81158061096c5750336000908152600960209081526040808320600160a060020a0387168452909152902054155b61097557600080fd5b60005461098a90600160a060020a0316610878565b15610a3c5760008054604080517fda682aeb000000000000000000000000000000000000000000000000000000008152336004820152600160a060020a038781166024830152604482018790529151919092169263da682aeb92606480820193602093909283900390910190829087803b158015610a0757600080fd5b505af1158015610a1b573d6000803e3d6000fd5b505050506040513d6020811015610a3157600080fd5b5051610a3c57600080fd5b336000818152600960209081526040808320600160a060020a03881680855290835292819020869055805186815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060015b92915050565b60075481565b6000610ab5436110e6565b90505b90565b60008054600160a060020a03163314610b3b57600b5460ff16610add57600080fd5b600160a060020a0384166000908152600960209081526040808320338452909152902054821115610b1057506000610b49565b600160a060020a03841660009081526009602090815260408083203384529091529020805483900390555b610b4684848461163d565b90505b9392505050565b60025460ff1681565b600054600160a060020a03163314610b7057600080fd5b6000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b600160a060020a0382166000908152600860205260408120541580610bf95750600160a060020a03831660009081526008602052604081208054849290610be257fe5b6000918252602090912001546001608060020a0316115b15610cbf57600554600160a060020a031615610cb757600554600654600160a060020a0390911690634ee2cd7e908590610c34908690611829565b6040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a031681526020018281526020019250505060206040518083038186803b158015610c8457600080fd5b505afa158015610c98573d6000803e3d6000fd5b505050506040513d6020811015610cae57600080fd5b50519050610a9e565b506000610a9e565b600160a060020a0383166000908152600860205260409020610ce1908361183f565b9050610a9e565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109245780601f106108f957610100808354040283529160200191610924565b600082610d4e574392505b6000600b60019054906101000a9004600160a060020a0316600160a060020a0316635b7b72c130868a8a8a896040518763ffffffff1660e060020a0281526004018087600160a060020a0316600160a060020a03168152602001868152602001806020018560ff1660ff1681526020018060200184151515158152602001838103835287818151815260200191508051906020019080838360005b83811015610e01578181015183820152602001610de9565b50505050905090810190601f168015610e2e5780820380516001836020036101000a031916815260200191505b50838103825285518152855160209182019187019080838360005b83811015610e61578181015183820152602001610e49565b50505050905090810190601f168015610e8e5780820380516001836020036101000a031916815260200191505b5098505050505050505050602060405180830381600087803b158015610eb357600080fd5b505af1158015610ec7573d6000803e3d6000fd5b505050506040513d6020811015610edd57600080fd5b5051604080517f3cebb8230000000000000000000000000000000000000000000000000000000081523360048201529051919250600160a060020a03831691633cebb8239160248082019260009290919082900301818387803b158015610f4357600080fd5b505af1158015610f57573d6000803e3d6000fd5b5050604080518781529051600160a060020a03851693507f086c875b377f900b07ce03575813022f05dd10ed7640b5282cf6d3c3fc352ade92509081900360200190a29695505050505050565b6000610a9e8243610b9f565b600554600160a060020a031681565b60008054600160a060020a03163314610fd757600080fd5b6000610fe1610aaa565b9050808382011015610ff257600080fd5b6000610ffd85610fa4565b905080848201101561100e57600080fd5b61101b600a858401611989565b600160a060020a038516600090815260086020526040902061103f90828601611989565b604080518581529051600160a060020a038716916000917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3506001949350505050565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156109245780601f106108f957610100808354040283529160200191610924565b600a546000901580611119575081600a60008154811061110257fe5b6000918252602090912001546001608060020a0316115b156111c457600554600160a060020a0316156111bc57600554600654600160a060020a039091169063981b24d090611152908590611829565b6040518263ffffffff1660e060020a0281526004018082815260200191505060206040518083038186803b15801561118957600080fd5b505afa15801561119d573d6000803e3d6000fd5b505050506040513d60208110156111b357600080fd5b5051905061089a565b50600061089a565b6111cf600a8361183f565b905061089a565b600b5460009060ff166111e857600080fd5b610b4933848461163d565b600b5460ff1681565b60065481565b600061120e848461092c565b61121757600080fd5b6040517f8f4ffcb10000000000000000000000000000000000000000000000000000000081523360048201818152602483018690523060448401819052608060648501908152865160848601528651600160a060020a038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b838110156112aa578181015183820152602001611292565b50505050905090810190601f1680156112d75780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156112f957600080fd5b505af115801561130d573d6000803e3d6000fd5b506001979650505050505050565b60008054600160a060020a0316331461133357600080fd5b600061133d610aaa565b90508281101561134c57600080fd5b600061135785610fa4565b90508381101561136657600080fd5b611373600a858403611989565b600160a060020a038516600090815260086020526040902061139790858303611989565b604080518581529051600091600160a060020a038816917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a3506001949350505050565b600160a060020a03918216600090815260096020908152604080832093909416825291909152205490565b600054600160a060020a0316331461142557600080fd5b600160a060020a0381166114745760008054604051600160a060020a0390911691303180156108fc02929091818181858888f1935050505015801561146e573d6000803e3d6000fd5b506115ed565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518291600091600160a060020a038416916370a08231916024808301926020929190829003018186803b1580156114d857600080fd5b505afa1580156114ec573d6000803e3d6000fd5b505050506040513d602081101561150257600080fd5b505160008054604080517fa9059cbb000000000000000000000000000000000000000000000000000000008152600160a060020a0392831660048201526024810185905290519394509085169263a9059cbb92604480840193602093929083900390910190829087803b15801561157857600080fd5b505af115801561158c573d6000803e3d6000fd5b505050506040513d60208110156115a257600080fd5b5050600054604080518381529051600160a060020a03928316928616917ff931edb47c50b4b4104c187b5814a9aef5f709e17e2ecf9617e860cacade929c919081900360200190a350505b50565b600b546101009004600160a060020a031681565b600054600160a060020a0316331461161b57600080fd5b600b805460ff1916911515919091179055565b600054600160a060020a031681565b60008161164c57506001610b49565b436006541061165a57600080fd5b600160a060020a0383161580159061167b5750600160a060020a0383163014155b61168457600080fd5b60006116908543610b9f565b9050828110156116a4576000915050610b49565b6000546116b990600160a060020a0316610878565b1561176d5760008054604080517f4a393149000000000000000000000000000000000000000000000000000000008152600160a060020a03898116600483015288811660248301526044820188905291519190921692634a39314992606480820193602093909283900390910190829087803b15801561173857600080fd5b505af115801561174c573d6000803e3d6000fd5b505050506040513d602081101561176257600080fd5b505161176d57600080fd5b600160a060020a038516600090815260086020526040902061179190848303611989565b600061179d8543610b9f565b90508084820110156117ae57600080fd5b600160a060020a03851660009081526008602052604090206117d290828601611989565b84600160a060020a031686600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef866040518082815260200191505060405180910390a350600195945050505050565b60008183106118385781610b49565b5090919050565b815460009061185057506000610a9e565b82548390600019810190811061186257fe5b6000918252602090912001546001608060020a031682106118bf5782548390600019810190811061188f57fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a03169050610a9e565b826000815481106118cc57fe5b6000918252602090912001546001608060020a03168210156118f057506000610a9e565b8254600090600019015b8181111561194b57600060026001838501010490508486828154811061191c57fe5b6000918252602090912001546001608060020a03161161193e57809250611945565b6001810391505b506118fa565b84828154811061195757fe5b60009182526020909120015470010000000000000000000000000000000090046001608060020a031695945050505050565b815415806119bd575081544390839060001981019081106119a657fe5b6000918252602090912001546001608060020a0316105b15611a3157815460009083906119d68260018301611a7c565b815481106119e057fe5b600091825260209091200180546001608060020a03848116700100000000000000000000000000000000024382166fffffffffffffffffffffffffffffffff19909316929092171617905550611a78565b815460009083906000198101908110611a4657fe5b600091825260209091200180546001608060020a03808516700100000000000000000000000000000000029116179055505b5050565b815481835581811115611aa057600083815260209020611aa0918101908301611aa5565b505050565b610ab891905b80821115611abf5760008155600101611aab565b509056fea265627a7a72305820b12be6ac6fd3008069dc00e7472a0b3d5895ab8d4f0aff406d7dc7802b337e7f64736f6c634300050a0032",
  "sourceMap": "1806:33:5:-;65:409:0;1806:33:5;;65:409:0;1806:33:5;;;;;;;;;;;;;;:::i;:::-;;103:368:0;8:9:-1;5:2;;;30:1;27;20:12;5:2;103:368:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;103:368:0;4146:691:5;;;;;;;;;;;;103:368:0;4146:691:5;;;;;;;;;;;;;;;;;;;;;;190:1:0;295:23:3;;-1:-1:-1;;;;;;295:23:3;308:10;295:23;;;4396:12:5;:48;;-1:-1:-1;;;;;4396:48:5;;295:23:3;4396:48:5;-1:-1:-1;;;;;;4396:48:5;;;;;;4450:17;;103:368:0;;190:1;;;;4146:691:5;;339:2:0;;4146:691:5;;417:4:0;;4450:17:5;;417:4:0;;4450:17:5;:::i;:::-;-1:-1:-1;4521:8:5;:24;;-1:-1:-1;;4521:24:5;;;;;;;4596:21;;;;:6;;:21;;;;;:::i;:::-;-1:-1:-1;4669:11:5;:39;;-1:-1:-1;;;;;;4669:39:5;-1:-1:-1;;;;;4669:39:5;;;;;;;;;;;-1:-1:-1;;;4714:19:5;:42;4762:16;:36;;-1:-1:-1;;4762:36:5;;;;;;;;;;-1:-1:-1;;4820:12:5;4804:13;:28;65:409:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;65:409:0;;;-1:-1:-1;65:409:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "65:409:0:-;;;;;;;;;;-1:-1:-1;;;65:409:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19056:10:5;;19045:22;;-1:-1:-1;;;;;19056:10:5;19045;:22::i;:::-;19037:31;;;;;;19098:10;;19082:69;;;;;;19140:10;19082:69;;;;;;-1:-1:-1;;;;;19098:10:5;;;;19082:40;;19129:9;;19082:69;;;;;;;;;;;;;;19129:9;19098:10;19082:69;;;5:2:-1;;;;30:1;27;20:12;5:2;19082:69:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19082:69:5;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19082:69:5;19074:78;;;;;;65:409:0;1586:18:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1586:18:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1586:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8619:778;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8619:778:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8619:778:5;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2678:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2678:25:5;;;:::i;:::-;;;;;;;;;;;;;;;;10784:95;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10784:95:5;;;:::i;5625:647::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5625:647:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5625:647:5;;;;;;;;;;;;;;;;;:::i;1664:21::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1664:21:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;440:118:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;440:118:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;440:118:3;-1:-1:-1;;;;;440:118:3;;:::i;11223:887:5:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11223:887:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;11223:887:5;;;;;;;;:::i;1806:33::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1806:33:5;;;:::i;13863:717::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;13863:717:5;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;13863:717:5;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;13863:717:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;13863:717:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;13863:717:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;13863:717:5;;;;;;;;;;;-1:-1:-1;13863:717:5;;;;-1:-1:-1;13863:717:5;;;;-1:-1:-1;21:11;5:28;;2:2;;;46:1;43;36:12;2:2;13863:717:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;13863:717:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;13863:717:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;13863:717:5;;-1:-1:-1;;13863:717:5;;;-1:-1:-1;;;13863:717:5;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;13863:717:5;;;;;;;;;;;;;;8110:124;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8110:124:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8110:124:5;-1:-1:-1;;;;;8110:124:5;;:::i;2387:30::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2387:30:5;;;:::i;14901:554::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14901:554:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;14901:554:5;;;;;;;;:::i;1743:20::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1743:20:5;;;:::i;12315:833::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12315:833:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12315:833:5;;:::i;5126:163::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5126:163:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5126:163:5;;;;;;;;:::i;3237:28::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3237:28:5;;;:::i;2568:31::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2568:31:5;;;:::i;10344:322::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10344:322:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;10344:322:5;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;10344:322:5;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;10344:322:5;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;10344:322:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;10344:322:5;;-1:-1:-1;10344:322:5;;-1:-1:-1;;;;;10344:322:5:i;15675:478::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15675:478:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;15675:478:5;;;;;;;;:::i;9704:139::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;9704:139:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;9704:139:5;;;;;;;;;;:::i;19447:367::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19447:367:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19447:367:5;-1:-1:-1;;;;;19447:367:5;;:::i;3319:38::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3319:38:5;;;:::i;16370:118::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16370:118:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16370:118:5;;;;:::i;234:33:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;234:33:3;;;:::i;18410:199:5:-;18467:4;;-1:-1:-1;;;;;18498:19:5;;18494:37;;18526:5;18519:12;;;;;18494:37;-1:-1:-1;;18562:18:5;;18598:6;;18410:199;;;;:::o;1586:18::-;;;;;;;;;;;;;;;-1:-1:-1;;1586:18:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8619:778::-;8715:16;;8687:12;;8715:16;;8707:25;;;;;;9035:12;;;9034:54;;-1:-1:-1;9061:10:5;9053:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;9053:29:5;;;;;;;;;;:34;9034:54;9026:63;;;;;;9175:10;;9164:22;;-1:-1:-1;;;;;9175:10:5;9164;:22::i;:::-;9160:120;;;9220:10;;;9204:68;;;;;;9242:10;9204:68;;;;-1:-1:-1;;;;;9204:68:5;;;;;;;;;;;;;;;9220:10;;;;;9204:37;;:68;;;;;;;;;;;;;;;;;;9220:10;9204:68;;;5:2:-1;;;;30:1;27;20:12;5:2;9204:68:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9204:68:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9204:68:5;9196:77;;;;;;9294:10;9286:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;9286:29:5;;;;;;;;;;;;:39;;;9336;;;;;;;9286:29;;9294:10;9336:39;;;;;;;;;;;-1:-1:-1;9388:4:5;8619:778;;;;;:::o;2678:25::-;;;;:::o;10784:95::-;10828:4;10847:27;10861:12;10847:13;:27::i;:::-;10840:34;;10784:95;;:::o;5625:647::-;5711:12;6009:10;;-1:-1:-1;;;;;6009:10:5;5995;:24;5991:233;;6037:16;;;;6029:25;;;;;;-1:-1:-1;;;;;6122:14:5;;;;;;:7;:14;;;;;;;;6137:10;6122:26;;;;;;;;:36;-1:-1:-1;6118:54:5;;;-1:-1:-1;6167:5:5;6160:12;;6118:54;-1:-1:-1;;;;;6180:14:5;;;;;;:7;:14;;;;;;;;6195:10;6180:26;;;;;;;:37;;;;;;;5991:233;6236:31;6247:5;6254:3;6259:7;6236:10;:31::i;:::-;6229:38;;5625:647;;;;;;:::o;1664:21::-;;;;;;:::o;440:118:3:-;213:10;;-1:-1:-1;;;;;213:10:3;199;:24;191:33;;;;;;526:10;:27;;-1:-1:-1;;526:27:3;-1:-1:-1;;;;;526:27:3;;;;;;;;;;440:118::o;11223:887:5:-;-1:-1:-1;;;;;11641:16:5;;11304:4;11641:16;;;:8;:16;;;;;:23;:28;;11640:90;;-1:-1:-1;;;;;;11685:16:5;;;;;;:8;:16;;;;;:19;;11717:12;;11685:16;:19;;;;;;;;;;;;;:29;-1:-1:-1;;;;;11685:29:5;:44;11640:90;11636:468;;;11754:11;;-1:-1:-1;;;;;11754:11:5;11746:34;11742:207;;11801:11;;11851:19;;-1:-1:-1;;;;;11801:11:5;;;;:23;;11825:6;;11833:38;;11837:12;;11833:3;:38::i;:::-;11801:71;;;;;-1:-1:-1;;;11801:71:5;;;;;;;-1:-1:-1;;;;;11801:71:5;-1:-1:-1;;;;;11801:71:5;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11801:71:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11801:71:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11801:71:5;;-1:-1:-1;11794:78:5;;11742:207;-1:-1:-1;11937:1:5;11930:8;;11636:468;-1:-1:-1;;;;;12064:16:5;;;;;;:8;:16;;;;;12053:42;;12082:12;12053:10;:42::i;:::-;12046:49;;;;1806:33;;;;;;;;;;;;;;;-1:-1:-1;;1806:33:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13863:717;14077:7;14096:19;14092:54;;14134:12;14117:29;;14092:54;14152:22;14177:12;;;;;;;;;-1:-1:-1;;;;;14177:12:5;-1:-1:-1;;;;;14177:29:5;;14224:4;14239:14;14263:15;14288:18;14316:17;14343;14177:193;;;;;-1:-1:-1;;;14177:193:5;;;;;;;-1:-1:-1;;;;;14177:193:5;-1:-1:-1;;;;;14177:193:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14177:193:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14177:193:5;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14177:193:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14177:193:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14177:193:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14177:193:5;14377:39;;;;;;14405:10;14377:39;;;;;;14177:193;;-1:-1:-1;;;;;;14377:27:5;;;;;:39;;;;;-1:-1:-1;;14377:39:5;;;;;;;;-1:-1:-1;14377:27:5;:39;;;5:2:-1;;;;30:1;27;20:12;5:2;14377:39:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;14493:50:5;;;;;;;;-1:-1:-1;;;;;14493:50:5;;;-1:-1:-1;14493:50:5;;-1:-1:-1;14493:50:5;;;;;;;;14564:10;13863:717;-1:-1:-1;;;;;;13863:717:5:o;8110:124::-;8166:15;8196:33;8208:6;8216:12;8196:11;:33::i;2387:30::-;;;-1:-1:-1;;;;;2387:30:5;;:::o;14901:554::-;14989:4;213:10:3;;-1:-1:-1;;;;;213:10:3;199;:24;191:33;;;;;;15001:19:5;15023:13;:11;:13::i;:::-;15001:35;;15078:14;15067:7;15050:14;:24;:42;;15042:51;;;;;;15121:22;15146:17;15156:6;15146:9;:17::i;:::-;15121:42;;15208:17;15197:7;15177:17;:27;:48;;15169:57;;;;;;15254:62;15271:18;15308:7;15291:14;:24;15254:16;:62::i;:::-;-1:-1:-1;;;;;15339:16:5;;;;;;:8;:16;;;;;15322:63;;15357:27;;;15322:16;:63::i;:::-;15396:37;;;;;;;;-1:-1:-1;;;;;15396:37:5;;;15413:1;;15396:37;;;;;;;;;-1:-1:-1;15446:4:5;;14901:554;-1:-1:-1;;;;14901:554:5:o;1743:20::-;;;;;;;;;;;;;;;-1:-1:-1;;1743:20:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12315:833;12726:18;:25;12377:4;;12726:30;;12725:92;;;12804:12;12770:18;12789:1;12770:21;;;;;;;;;;;;;;;;;:31;-1:-1:-1;;;;;12770:31:5;:46;12725:92;12721:423;;;12839:11;;-1:-1:-1;;;;;12839:11:5;12831:34;12827:164;;12884:11;;12928:19;;-1:-1:-1;;;;;12884:11:5;;;;:25;;12910:38;;12914:12;;12910:3;:38::i;:::-;12884:65;;;;;-1:-1:-1;;;12884:65:5;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12884:65:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12884:65:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12884:65:5;;-1:-1:-1;12877:72:5;;12827:164;-1:-1:-1;12981:1:5;12974:8;;12721:423;13093:44;13104:18;13124:12;13093:10;:44::i;:::-;13086:51;;;;5126:163;5218:16;;5190:12;;5218:16;;5210:25;;;;;;5248:36;5259:10;5271:3;5276:7;5248:10;:36::i;3237:28::-;;;;;;:::o;2568:31::-;;;;:::o;10344:322::-;10447:12;10475:26;10483:8;10493:7;10475;:26::i;:::-;10467:35;;;;;;10509:134;;;;;10567:10;10509:134;;;;;;;;;;;;10612:4;10509:134;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10509:48:5;;;;;10567:10;10587:7;;10612:4;10627:10;;10509:134;;;;;;;;;;;;;;;;-1:-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;10509:134:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10509:134:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;10657:4:5;;10344:322;-1:-1:-1;;;;;;;10344:322:5:o;15675:478::-;15762:4;213:10:3;;-1:-1:-1;;;;;213:10:3;199;:24;191:33;;;;;;15774:19:5;15796:13;:11;:13::i;:::-;15774:35;;15841:7;15823:14;:25;;15815:34;;;;;;15855:24;15882:17;15892:6;15882:9;:17::i;:::-;15855:44;;15936:7;15913:19;:30;;15905:39;;;;;;15950:62;15967:18;16004:7;15987:14;:24;15950:16;:62::i;:::-;-1:-1:-1;;;;;16035:16:5;;;;;;:8;:16;;;;;16018:65;;16053:29;;;16018:16;:65::i;:::-;16094:37;;;;;;;;16119:1;;-1:-1:-1;;;;;16094:37:5;;;;;;;;;;;;-1:-1:-1;16144:4:5;;15675:478;-1:-1:-1;;;;15675:478:5:o;9704:139::-;-1:-1:-1;;;;;9813:15:5;;;9781:17;9813:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;9704:139::o;19447:367::-;213:10:3;;-1:-1:-1;;;;;213:10:3;199;:24;191:33;;;;;;-1:-1:-1;;;;;19524:22:5;;19520:99;;19556:10;;;:42;;-1:-1:-1;;;;;19556:10:5;;;;19584:4;19576:21;19556:42;;;;;19576:21;;19556:42;:10;:42;19576:21;19556:10;:42;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19556:42:5;19606:7;;19520:99;19685:30;;;;;;19709:4;19685:30;;;;;;19657:6;;19625:17;;-1:-1:-1;;;;;19685:15:5;;;;;:30;;;;;;;;;;;;;;:15;:30;;;5:2:-1;;;;30:1;27;20:12;5:2;19685:30:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19685:30:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19685:30:5;19736:10;;;19721:35;;;;;;-1:-1:-1;;;;;19736:10:5;;;19721:35;;;;;;;;;;;;19685:30;;-1:-1:-1;19721:14:5;;;;;;:35;;;;;19685:30;;19721:35;;;;;;;;;;;:14;:35;;;5:2:-1;;;;30:1;27;20:12;5:2;19721:35:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19721:35:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;19789:10:5;;19767:42;;;;;;;;-1:-1:-1;;;;;19789:10:5;;;;19767:42;;;;;;;;;19721:35;19767:42;;;226:1:3;;;19447:367:5;:::o;3319:38::-;;;;;;-1:-1:-1;;;;;3319:38:5;;:::o;16370:118::-;213:10:3;;-1:-1:-1;;;;;213:10:3;199;:24;191:33;;;;;;16447:16:5;:36;;-1:-1:-1;;16447:36:5;;;;;;;;;;16370:118::o;234:33:3:-;;;-1:-1:-1;;;;;234:33:3;;:::o;6637:1344:5:-;6719:4;6735:12;6731:44;;-1:-1:-1;6764:4:5;6757:11;;6731:44;6811:12;6789:19;;:34;6781:43;;;;;;-1:-1:-1;;;;;6905:17:5;;;;;;6904:45;;-1:-1:-1;;;;;;6928:20:5;;6943:4;6928:20;;6904:45;6896:54;;;;;;7070:24;7097:32;7109:5;7116:12;7097:11;:32::i;:::-;7070:59;;7161:7;7139:19;:29;7135:62;;;7185:5;7178:12;;;;;7135:62;7269:10;;7258:22;;-1:-1:-1;;;;;7269:10:5;7258;:22::i;:::-;7254:111;;;7314:10;;;7298:59;;;;;;-1:-1:-1;;;;;7298:59:5;;;;;;;;;;;;;;;;;;;;;;7314:10;;;;;7298:38;;:59;;;;;;;;;;;;;;;;;;7314:10;7298:59;;;5:2:-1;;;;30:1;27;20:12;5:2;7298:59:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7298:59:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7298:59:5;7290:68;;;;;;-1:-1:-1;;;;;7488:15:5;;;;;;:8;:15;;;;;7471:64;;7505:29;;;7471:16;:64::i;:::-;7643:22;7668:30;7680:3;7685:12;7668:11;:30::i;:::-;7643:55;;7743:17;7732:7;7712:17;:27;:48;;7704:57;;;;;;-1:-1:-1;;;;;7806:13:5;;;;;;:8;:13;;;;;7789:60;;7821:27;;;7789:16;:60::i;:::-;7945:3;-1:-1:-1;;;;;7929:29:5;7938:5;-1:-1:-1;;;;;7929:29:5;;7950:7;7929:29;;;;;;;;;;;;;;;;;;-1:-1:-1;7972:4:5;;6637:1344;-1:-1:-1;;;;;6637:1344:5:o;18677:89::-;18729:4;18752:1;18748;:5;:13;;18760:1;18748:13;;;-1:-1:-1;18756:1:5;;18677:89;-1:-1:-1;18677:89:5:o;16852:671::-;16961:18;;16945:4;;16957:37;;-1:-1:-1;16993:1:5;16986:8;;16957:37;17064:18;;17052:11;;-1:-1:-1;;17064:20:5;;;17052:33;;;;;;;;;;;;;;;:43;-1:-1:-1;;;;;17052:43:5;17042:53;;17038:111;;17122:18;;17110:11;;-1:-1:-1;;17122:20:5;;;17110:33;;;;;;;;;;;;;;;:39;;;;-1:-1:-1;;;;;17110:39:5;;-1:-1:-1;17103:46:5;;17038:111;17168:11;17180:1;17168:14;;;;;;;;;;;;;;;;;:24;-1:-1:-1;;;;;17168:24:5;17159:33;;17155:47;;;-1:-1:-1;17201:1:5;17194:8;;17155:47;17285:18;;17256:8;;-1:-1:-1;;17285:20:5;17311:173;17324:3;17318;:9;17311:173;;;17337:8;17365:1;17361;17349:9;;;:13;17348:18;17337:29;;17406:6;17378:11;17390:3;17378:16;;;;;;;;;;;;;;;;;:26;-1:-1:-1;;;;;17378:26:5;:34;17374:104;;17430:3;17424:9;;17374:104;;;17468:1;17464:3;:5;17458:11;;17374:104;17311:173;;;;17496:11;17508:3;17496:16;;;;;;;;;;;;;;;;;:22;;;;-1:-1:-1;;;;;17496:22:5;;16852:671;-1:-1:-1;;;;;16852:671:5:o;17731:516::-;17828:18;;:23;;17827:94;;-1:-1:-1;17873:18:5;;17908:12;;17861:11;;-1:-1:-1;;17873:21:5;;;17861:34;;;;;;;;;;;;;;;:44;-1:-1:-1;;;;;17861:44:5;:59;17827:94;17823:420;;;17979:20;;17931:32;;17966:11;;17979:20;17966:11;17979:20;;;;:::i;:::-;17966:35;;;;;;;;;;;;;;;;;18009:48;;-1:-1:-1;;;;;18065:37:5;;;;;18044:12;18009:48;;-1:-1:-1;;18009:48:5;;;;;;;18065:37;;;;-1:-1:-1;17823:420:5;;;18170:18;;18123:32;;18158:11;;-1:-1:-1;;18170:20:5;;;18158:33;;;;;;;;;;;;;;;18199:37;;-1:-1:-1;;;;;18199:37:5;;;;;;;;;;-1:-1:-1;17823:420:5;17731:516;;:::o;65:409:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.10;\n\nimport \"./external/MiniMeToken.sol\";\n\n\ncontract DTXToken is MiniMeToken {\n\n  constructor(address _tokenFactory) public MiniMeToken (\n    _tokenFactory,\n    address(0),             // no parent token\n    0,                      // no snapshot block number from parent\n    \"DaTa eXchange Token\",  // Token name\n    18,                     // Decimals\n    \"DTX\",                  // Symbol\n    true                    // Enable transfers\n    )\n  {}\n\n}\n",
  "sourcePath": "/Users/roderik/Development/databrokerdao-dxc/contracts/contracts/DTXToken.sol",
  "ast": {
    "absolutePath": "/Users/roderik/Development/databrokerdao-dxc/contracts/contracts/DTXToken.sol",
    "exportedSymbols": {
      "DTXToken": [22]
    },
    "id": 23,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "^", "0.5", ".10"],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/roderik/Development/databrokerdao-dxc/contracts/contracts/external/MiniMeToken.sol",
        "file": "./external/MiniMeToken.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 23,
        "sourceUnit": 2120,
        "src": "26:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "MiniMeToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2076,
              "src": "86:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MiniMeToken_$2076",
                "typeString": "contract MiniMeToken"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "86:11:0"
          }
        ],
        "contractDependencies": [953, 2076],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 22,
        "linearizedBaseContracts": [22, 2076, 953],
        "name": "DTXToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 20,
              "nodeType": "Block",
              "src": "469:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 21,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9,
                    "name": "_tokenFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6,
                    "src": "163:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 11,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "190:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 10,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "182:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "182:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "229:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "446154612065586368616e676520546f6b656e",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "297:21:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_500a6f216ae091ab80cdff19bc4aa87de6a01745ac30e2811997571b7213c95f",
                      "typeString": "literal_string \"DaTa eXchange Token\""
                    },
                    "value": "DaTa eXchange Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "339:2:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "445458",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "379:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f08f358567a4069e6c681faa1a9c1fc1e908b61025c14683a1fecb26b925fcc6",
                      "typeString": "literal_string \"DTX\""
                    },
                    "value": "DTX"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "417:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 18,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8,
                  "name": "MiniMeToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2076,
                  "src": "145:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MiniMeToken_$2076_$",
                    "typeString": "type(contract MiniMeToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "145:321:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "name": "_tokenFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "115:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "115:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "114:23:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "469:0:0"
            },
            "scope": 22,
            "src": "103:368:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 23,
        "src": "65:409:0"
      }
    ],
    "src": "0:475:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/roderik/Development/databrokerdao-dxc/contracts/contracts/DTXToken.sol",
    "exportedSymbols": {
      "DTXToken": [22]
    },
    "id": 23,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": ["solidity", "^", "0.5", ".10"],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "absolutePath": "/Users/roderik/Development/databrokerdao-dxc/contracts/contracts/external/MiniMeToken.sol",
        "file": "./external/MiniMeToken.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 23,
        "sourceUnit": 2120,
        "src": "26:36:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "MiniMeToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2076,
              "src": "86:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MiniMeToken_$2076",
                "typeString": "contract MiniMeToken"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "86:11:0"
          }
        ],
        "contractDependencies": [953, 2076],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 22,
        "linearizedBaseContracts": [22, 2076, 953],
        "name": "DTXToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 20,
              "nodeType": "Block",
              "src": "469:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 21,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 9,
                    "name": "_tokenFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6,
                    "src": "163:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 11,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "190:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 10,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "182:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 12,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "182:10:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "30",
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "229:1:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "446154612065586368616e676520546f6b656e",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "297:21:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_500a6f216ae091ab80cdff19bc4aa87de6a01745ac30e2811997571b7213c95f",
                      "typeString": "literal_string \"DaTa eXchange Token\""
                    },
                    "value": "DaTa eXchange Token"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "339:2:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "445458",
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "379:5:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f08f358567a4069e6c681faa1a9c1fc1e908b61025c14683a1fecb26b925fcc6",
                      "typeString": "literal_string \"DTX\""
                    },
                    "value": "DTX"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 17,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "417:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  }
                ],
                "id": 18,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8,
                  "name": "MiniMeToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2076,
                  "src": "145:11:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MiniMeToken_$2076_$",
                    "typeString": "type(contract MiniMeToken)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "145:321:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "name": "_tokenFactory",
                  "nodeType": "VariableDeclaration",
                  "scope": 21,
                  "src": "115:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "115:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "114:23:0"
            },
            "returnParameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "469:0:0"
            },
            "scope": 22,
            "src": "103:368:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 23,
        "src": "65:409:0"
      }
    ],
    "src": "0:475:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.10+commit.5a6ea5b1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-25T12:46:56.514Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "This function makes it easy to read the `allowed[]` map",
        "params": {
          "_owner": "The address of the account that owns the token",
          "_spender": "The address of the account able to transfer the tokens"
        },
        "return": "Amount of remaining tokens of _owner that _spender is allowed  to spend"
      },
      "approve(address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to be approved for transfer",
          "_spender": "The address of the account able to transfer the tokens"
        },
        "return": "True if the approval was successful"
      },
      "approveAndCall(address,uint256,bytes)": {
        "params": {
          "_amount": "The amount of tokens to be approved for transfer",
          "_spender": "The address of the contract able to transfer the tokens"
        },
        "return": "True if the function call was successful"
      },
      "balanceOf(address)": {
        "params": {
          "_owner": "The address that's balance is being requested"
        },
        "return": "The balance of `_owner` at the current block"
      },
      "balanceOfAt(address,uint256)": {
        "details": "Queries the balance of `_owner` at a specific `_blockNumber`",
        "params": {
          "_blockNumber": "The block number when the balance is queried",
          "_owner": "The address from which the balance will be retrieved"
        },
        "return": "The balance at `_blockNumber`"
      },
      "changeController(address)": {
        "params": {
          "_newController": "The new controller of the contract"
        }
      },
      "claimTokens(address)": {
        "params": {
          "_token": "The address of the token contract that you want to recover  set to 0 in case you want to extract ether."
        }
      },
      "createCloneToken(string,uint8,string,uint256,bool)": {
        "params": {
          "_cloneDecimalUnits": "Number of decimals of the smallest unit",
          "_cloneTokenName": "Name of the clone token",
          "_cloneTokenSymbol": "Symbol of the clone token",
          "_snapshotBlock": "Block when the distribution of the parent token is  copied to set the initial distribution of the new clone token;  if the block is zero than the actual block, the current block is used",
          "_transfersEnabled": "True if transfers are allowed in the clone"
        },
        "return": "The address of the new MiniMeToken Contract"
      },
      "destroyTokens(address,uint256)": {
        "params": {
          "_amount": "The quantity of tokens to burn",
          "_owner": "The address that will lose the tokens"
        },
        "return": "True if the tokens are burned correctly"
      },
      "enableTransfers(bool)": {
        "params": {
          "_transfersEnabled": "True if transfers are allowed in the clone"
        }
      },
      "generateTokens(address,uint256)": {
        "params": {
          "_amount": "The quantity of tokens generated",
          "_owner": "The address that will be assigned the new tokens"
        },
        "return": "True if the tokens are generated correctly"
      },
      "totalSupply()": {
        "details": "This function makes it easy to get the total number of tokens",
        "return": "The total number of tokens"
      },
      "totalSupplyAt(uint256)": {
        "params": {
          "_blockNumber": "The block number when the totalSupply is queried"
        },
        "return": "The total amount of tokens at `_blockNumber`"
      },
      "transfer(address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to be transferred",
          "_to": "The address of the recipient"
        },
        "return": "Whether the transfer was successful or not"
      },
      "transferFrom(address,address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to be transferred",
          "_from": "The address holding the tokens being transferred",
          "_to": "The address of the recipient"
        },
        "return": "True if the transfer was successful"
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "`msg.sender` approves `_spender` to spend `_amount` tokens on  its behalf. This is a modified version of the ERC20 approve function  to be a little bit safer"
      },
      "approveAndCall(address,uint256,bytes)": {
        "notice": "`msg.sender` approves `_spender` to send `_amount` tokens on  its behalf, and then a function is triggered in the contract that is  being approved, `_spender`. This allows users to use their tokens to  interact with contracts in one function call instead of two"
      },
      "balanceOfAt(address,uint256)": {
        "notice": "/////////////"
      },
      "changeController(address)": {
        "notice": "Changes the controller of the contract"
      },
      "claimTokens(address)": {
        "notice": "///////This method can be used by the controller to extract mistakenly  sent tokens to this contract."
      },
      "createCloneToken(string,uint8,string,uint256,bool)": {
        "notice": "/////////////Creates a new clone token with the initial distribution being  this token at `_snapshotBlock`"
      },
      "destroyTokens(address,uint256)": {
        "notice": "Burns `_amount` tokens from `_owner`"
      },
      "enableTransfers(bool)": {
        "notice": "/////////////Enables token holders to transfer their tokens freely if true"
      },
      "generateTokens(address,uint256)": {
        "notice": "/////////////Generates `_amount` tokens that are assigned to `_owner`"
      },
      "totalSupplyAt(uint256)": {
        "notice": "Total amount of tokens at a specific `_blockNumber`."
      },
      "transfer(address,uint256)": {
        "notice": "////////////////Send `_amount` tokens to `_to` from `msg.sender`"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "Send `_amount` tokens to `_to` from `_from` on the condition it  is approved by `_from`"
      }
    }
  }
}

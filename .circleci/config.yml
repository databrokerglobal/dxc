version: 2
jobs: # basic units of work in a run
  build_and_test_go: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: circleci/golang:1.12
    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run: mkdir -p $TEST_RESULTS # create the test results directory
      - restore_cache: # restores saved cache if no changes are detected since last run
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys:
            - v2-pkg-cache
      # Normally, this step would be in a custom primary image;
      # we've added it here for the sake of explanation.
      - run: go clean -modcache
      - run: go mod download
      - run:
          name: Run unit tests
          # Store the results of our tests in the $TEST_RESULTS directory
          command: chmod +x ./run-tests.sh && ./run-tests.sh
      - save_cache: # Store cache in the /go/pkg directory
          key: v1-pkg-cache
          paths:
            - "/go/pkg"
  build_and_test_truffle: # runs not using Workflows must have a `build` job as entry point
    working_directory: ~/dxc/truffle
    docker: # run the steps with Docker
      - image: circleci/node:12.16.1 # ...with this image as the primary container; this is where all `steps` will ru
    steps: # a collection of executable commands
      - checkout:
          path: ~/dxc
      - run:
          name: update-npm
          command: "sudo npm install -g npm@latest"
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm-packages
          command: npm install
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run: # run tests
          name: test
          command: npm run compile && npm run test
workflows:
  version: 2
  build_and_test_all:
    jobs:
      - build_and_test_go
      - build_and_test_truffle

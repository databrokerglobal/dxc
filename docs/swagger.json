{
    "swagger": "2.0",
    "info": {
        "description": "Data eXchange Controller API",
        "title": "DXC",
        "contact": {
            "name": "Databroker Github Repo",
            "url": "https://github.com/databrokerglobal/dxc"
        },
        "license": {
            "name": "License details",
            "url": "https://github.com/databrokerglobal/dxc/blob/master/dbdao-license.txt"
        },
        "version": "1.0"
    },
    "paths": {
        "/file/download": {
            "get": {
                "description": "Download a file from the DXC",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Download a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/files": {
            "get": {
                "description": "Get all files linked",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Get files",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.File"
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving item from database",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/files/upload": {
            "post": {
                "description": "Link a file from the LOCAL_FILES_DIR to the DXC",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Upload a file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to Upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "File invalid or empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "File not found, is the uploaded file in the rigth directory or correctly bound to your docker volume?",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error inserting file metadata in database",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getdata/{did}/file": {
            "get": {
                "description": "Download a file from the DXC",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Download a file (for users)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Digital identifier of the product bought",
                        "name": "did",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Signed verification data",
                        "name": "verificationdata",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    },
                    "401": {
                        "description": "Request not authorized. Signature and verification data invalid",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/product": {
            "post": {
                "description": "Create a product",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create Product",
                "parameters": [
                    {
                        "description": "Product",
                        "name": "p",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/products.ProductController"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/products.ProductController"
                        }
                    },
                    "400": {
                        "description": "Error creating product",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/product/{did}": {
            "get": {
                "description": "Get one products given a did",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get one product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Digital identifier of the product",
                        "name": "did",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Product"
                        }
                    },
                    "500": {
                        "description": "Error retrieving item from database",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/products": {
            "get": {
                "description": "Get all products",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Product"
                            }
                        }
                    },
                    "500": {
                        "description": "Error retrieving item from database",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/test": {
            "get": {
                "description": "returns \"test dxc ok\"",
                "tags": [
                    "test"
                ],
                "summary": "Test the server",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/authinfo": {
            "get": {
                "description": "Get address and api key for authentication with DXS",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get auth info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.UserAuth"
                        }
                    },
                    "404": {
                        "description": "Not data found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error getting auth info",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Save address and api key for authentication with DXS",
                "tags": [
                    "user"
                ],
                "summary": "Save auth info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "API Key",
                        "name": "apiKey",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error saving auth info",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.File": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "productID": {
                    "type": "integer"
                }
            }
        },
        "database.Product": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "string"
                },
                "did": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.File"
                    }
                },
                "host": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "producttype": {
                    "type": "string"
                }
            }
        },
        "database.UserAuth": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "api_key": {
                    "type": "string"
                }
            }
        },
        "products.ProductController": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.File"
                    }
                },
                "host": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "producttype": {
                    "type": "string"
                }
            }
        }
    }
}
{
    "swagger": "2.0",
    "info": {
        "description": "This is the DXC API server",
        "title": "DXC API",
        "contact": {
            "name": "Databroker",
            "url": "https://github.com/databrokerglobal/dxc/issues"
        },
        "license": {
            "name": "Settlemint NV",
            "url": "https://github.com/databrokerglobal/dxc/blob/master/dbdao-license.txt"
        },
        "version": "1.0"
    },
    "paths": {
        "/files/upload": {
            "post": {
                "description": "Link a file from the LOCAL_FILES_DIR to the DXC",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Upload a file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "File to Upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "File invalid or empty",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "File not found, is the uploaded file in the rigth directory or correctly bound to your docker volume?",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Error inserting file metadata in database",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}